"""
Node is defined as
self.left (the left child of the node)
self.right (the right child of the node)
self.info (the value contained in the node)
"""
def preOrder(root):
    def _preOrder(root,t):
        if root:
            t += str(root.info) + ' '
            t = _preOrder(root.left,t)
            t = _preOrder(root.right,t)
        return t

    if root:
        return print(_preOrder(root,''))


##################################Leetcode#########################################

class Solution:
    def __init__(self):
        self.out = []
    def preorderTraversal(self, root: Optional[TreeNode]) -> List[int]:      
        if root:
            self.out.append(root.val)
            self.preorderTraversal(root.left)
            self.preorderTraversal(root.right)
        return self.out
